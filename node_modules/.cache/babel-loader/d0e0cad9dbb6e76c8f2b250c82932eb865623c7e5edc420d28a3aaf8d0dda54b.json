{"ast":null,"code":"// firebase.js\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { query, where, orderBy, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDd3BOTfwY9-F2EfmrDDFxA45P0e9g3irM\",\n  authDomain: \"me-mirror.firebaseapp.com\",\n  projectId: \"me-mirror\",\n  storageBucket: \"me-mirror.firebasestorage.app\",\n  messagingSenderId: \"375440530618\",\n  appId: \"1:375440530618:web:667bcb37b6bead5af4f683\",\n  measurementId: \"G-WZ6NNTYPT8\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nexport const signInWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n};\nexport const getTodayPrompt = async () => {\n  const res = await fetch(\"https://memirror-gpt-9jjdr1y7a-snoopys-projects-b77154e9.vercel.app\"); // ← your Vercel URL\n  const data = await res.json();\n  return data.prompt;\n};\nexport const saveEntry = async text => {\n  const user = auth.currentUser;\n  if (!user) throw new Error('Not logged in');\n  const docRef = await addDoc(collection(db, 'entries'), {\n    uid: user.uid,\n    text,\n    date: new Date().toISOString()\n  });\n  return docRef.id;\n};\nexport const getUserEntries = async () => {\n  const user = auth.currentUser;\n  console.log(\"getUserEntries() - currentUser:\", user);\n  if (!user) throw new Error('Not logged in');\n  const q = query(collection(db, 'entries'), where('uid', '==', user.uid), orderBy('date', 'desc'));\n  const snapshot = await getDocs(q);\n  const result = snapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n  console.log(\"Firestore query result:\", result);\n  return result;\n};\nexport { auth, db };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","collection","addDoc","query","where","orderBy","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","signInWithGoogle","provider","getTodayPrompt","res","fetch","data","json","prompt","saveEntry","text","user","currentUser","Error","docRef","uid","date","Date","toISOString","id","getUserEntries","console","log","q","snapshot","result","docs","map","doc"],"sources":["/Users/yurara/me-mirror/src/firebase.js"],"sourcesContent":["// firebase.js\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { query, where, orderBy, getDocs } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDd3BOTfwY9-F2EfmrDDFxA45P0e9g3irM\",\n    authDomain: \"me-mirror.firebaseapp.com\",\n    projectId: \"me-mirror\",\n    storageBucket: \"me-mirror.firebasestorage.app\",\n    messagingSenderId: \"375440530618\",\n    appId: \"1:375440530618:web:667bcb37b6bead5af4f683\",\n    measurementId: \"G-WZ6NNTYPT8\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport const signInWithGoogle = async () => {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  };\n  \n  export const getTodayPrompt = async () => {\n    const res = await fetch(\"https://memirror-gpt-9jjdr1y7a-snoopys-projects-b77154e9.vercel.app\"); // ← your Vercel URL\n    const data = await res.json();\n    return data.prompt;\n  };\n  \n  export const saveEntry = async (text) => {\n    const user = auth.currentUser;\n    if (!user) throw new Error('Not logged in');\n    const docRef = await addDoc(collection(db, 'entries'), {\n      uid: user.uid,\n      text,\n      date: new Date().toISOString(),\n    });\n    return docRef.id;\n  };\n  \n  export const getUserEntries = async () => {\n    const user = auth.currentUser;\n    console.log(\"getUserEntries() - currentUser:\", user);\n    if (!user) throw new Error('Not logged in');\n  \n    const q = query(\n      collection(db, 'entries'),\n      where('uid', '==', user.uid),\n      orderBy('date', 'desc')\n    );\n  \n    const snapshot = await getDocs(q);\n    const result = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    console.log(\"Firestore query result:\", result);\n    return result;\n  };\n\nexport { auth, db };\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAC5E,SAASC,YAAY,EAAEC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AACrE,SAASC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,QAAQ,oBAAoB;AAEnE,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,2BAA2B;EACvCC,SAAS,EAAE,WAAW;EACtBC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAEH,MAAMC,GAAG,GAAGnB,aAAa,CAACW,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGnB,OAAO,CAACkB,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGjB,YAAY,CAACe,GAAG,CAAC;AAE5B,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,QAAQ,GAAG,IAAIrB,kBAAkB,CAAC,CAAC;EACzC,OAAOC,eAAe,CAACiB,IAAI,EAAEG,QAAQ,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qEAAqE,CAAC,CAAC,CAAC;EAChG,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC7B,OAAOD,IAAI,CAACE,MAAM;AACpB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACvC,MAAMC,IAAI,GAAGZ,IAAI,CAACa,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAC3C,MAAMC,MAAM,GAAG,MAAM7B,MAAM,CAACD,UAAU,CAACgB,EAAE,EAAE,SAAS,CAAC,EAAE;IACrDe,GAAG,EAAEJ,IAAI,CAACI,GAAG;IACbL,IAAI;IACJM,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOJ,MAAM,CAACK,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMT,IAAI,GAAGZ,IAAI,CAACa,WAAW;EAC7BS,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEX,IAAI,CAAC;EACpD,IAAI,CAACA,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAE3C,MAAMU,CAAC,GAAGrC,KAAK,CACbF,UAAU,CAACgB,EAAE,EAAE,SAAS,CAAC,EACzBb,KAAK,CAAC,KAAK,EAAE,IAAI,EAAEwB,IAAI,CAACI,GAAG,CAAC,EAC5B3B,OAAO,CAAC,MAAM,EAAE,MAAM,CACxB,CAAC;EAED,MAAMoC,QAAQ,GAAG,MAAMnC,OAAO,CAACkC,CAAC,CAAC;EACjC,MAAME,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;IAAET,EAAE,EAAES,GAAG,CAACT,EAAE;IAAE,GAAGS,GAAG,CAACtB,IAAI,CAAC;EAAE,CAAC,CAAC,CAAC;EACxEe,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,MAAM,CAAC;EAC9C,OAAOA,MAAM;AACf,CAAC;AAEH,SAAS1B,IAAI,EAAEC,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}