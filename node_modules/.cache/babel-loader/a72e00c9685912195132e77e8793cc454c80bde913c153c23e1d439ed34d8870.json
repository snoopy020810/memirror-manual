{"ast":null,"code":"// firebase.js (sample logic for Firebase setup)\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, query, where, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDd3BOTfwY9-F2EfmrDDFxA45P0e9g3irM\",\n  authDomain: \"me-mirror.firebaseapp.com\",\n  projectId: \"me-mirror\",\n  storageBucket: \"me-mirror.firebasestorage.app\",\n  messagingSenderId: \"375440530618\",\n  appId: \"1:375440530618:web:667bcb37b6bead5af4f683\",\n  measurementId: \"G-WZ6NNTYPT8\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nexport const signInWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n};\nexport const getTodayPrompt = async () => {\n  // Static or AI-generated prompt\n  return 'What are you proud of today?';\n};\nexport const saveEntry = async text => {\n  const user = auth.currentUser;\n  if (!user) throw new Error('Not logged in');\n  const docRef = await addDoc(collection(db, 'entries'), {\n    uid: user.uid,\n    text,\n    date: new Date().toISOString()\n  });\n  return docRef.id;\n};\nexport { auth, db };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","getFirestore","collection","addDoc","query","where","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","signInWithGoogle","provider","getTodayPrompt","saveEntry","text","user","currentUser","Error","docRef","uid","date","Date","toISOString","id"],"sources":["/Users/yurara/me-mirror/src/firebase.js"],"sourcesContent":["// firebase.js (sample logic for Firebase setup)\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, query, where, getDocs } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDd3BOTfwY9-F2EfmrDDFxA45P0e9g3irM\",\n    authDomain: \"me-mirror.firebaseapp.com\",\n    projectId: \"me-mirror\",\n    storageBucket: \"me-mirror.firebasestorage.app\",\n    messagingSenderId: \"375440530618\",\n    appId: \"1:375440530618:web:667bcb37b6bead5af4f683\",\n    measurementId: \"G-WZ6NNTYPT8\"\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport const signInWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  return signInWithPopup(auth, provider);\n};\n\nexport const getTodayPrompt = async () => {\n  // Static or AI-generated prompt\n  return 'What are you proud of today?';\n};\n\nexport const saveEntry = async (text) => {\n  const user = auth.currentUser;\n  if (!user) throw new Error('Not logged in');\n\n  const docRef = await addDoc(collection(db, 'entries'), {\n    uid: user.uid,\n    text,\n    date: new Date().toISOString(),\n  });\n  return docRef.id;\n};\n\nexport { auth, db };"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAC5E,SAASC,YAAY,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,oBAAoB;AAE5F,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,2BAA2B;EACvCC,SAAS,EAAE,WAAW;EACtBC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAEH,MAAMC,GAAG,GAAGlB,aAAa,CAACU,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGlB,OAAO,CAACiB,GAAG,CAAC;AACzB,MAAME,EAAE,GAAGhB,YAAY,CAACc,GAAG,CAAC;AAE5B,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,QAAQ,GAAG,IAAIpB,kBAAkB,CAAC,CAAC;EACzC,OAAOC,eAAe,CAACgB,IAAI,EAAEG,QAAQ,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC;EACA,OAAO,8BAA8B;AACvC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACvC,MAAMC,IAAI,GAAGP,IAAI,CAACQ,WAAW;EAC7B,IAAI,CAACD,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;EAE3C,MAAMC,MAAM,GAAG,MAAMvB,MAAM,CAACD,UAAU,CAACe,EAAE,EAAE,SAAS,CAAC,EAAE;IACrDU,GAAG,EAAEJ,IAAI,CAACI,GAAG;IACbL,IAAI;IACJM,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOJ,MAAM,CAACK,EAAE;AAClB,CAAC;AAED,SAASf,IAAI,EAAEC,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}